version: 2.1

orbs:
  win: circleci/windows@2.3.0
  go: circleci/go@1.7.0

workflows:
  version: 2
  build_pr:
    jobs:
      - codegen_verification
      - amd64_build
      - amd64_test:
          requires:
            - amd64_build
      - amd64_integration:
          requires:
            - amd64_build
      - arm64_build
      - arm64_test:
          requires:
            - arm64_build
      - arm64_integration:
          requires:
            - arm64_build
      - mac_amd64_build
      - mac_amd64_test:
          requires:
            - mac_amd64_build
      - mac_amd64_integration:
          requires:
            - mac_amd64_build
  #build_windows:
  #  jobs:
      #- windows_x64_build

commands:
  prepare_go:
    description: Clean out existing Go so we can use our preferred version
    steps:
      - run: |
          sudo rm -rf /home/circleci/.go_workspace /usr/local/go
          sudo rm -rf /home/circleci/.go_workspace/bin /usr/local/go/bin

  generic_build:
    description: Run basic build and store in workspace for re-use by different architectures
    steps:
      - restore_cache:
          keys:
            - 'go-mod-1-14-7-v1-{{ arch }}-{{ checksum "go.mod" }}-{{ checksum "go.sum" }}'
      - run:
          name: scripts/travis/build.sh --make_debug
          command: |
            export PATH=$(echo "$PATH" | sed -e 's|:/home/circleci/\.go_workspace/bin||g' | sed -e 's|:/usr/local/go/bin||g')
            export GOPATH="/home/circleci/go"
            export ALGORAND_DEADLOCK=enable
            scripts/travis/build.sh --make_debug
      - save_cache:
          key: 'go-mod-1-14-7-v1-{{ arch }}-{{ checksum "go.mod" }}-{{ checksum "go.sum" }}'
          paths:
            - /home/circleci/go/pkg/mod
      - persist_to_workspace:
          root: /home/circleci
          paths:
            - project
            - go
            - gimme
            - .gimme

  generic_shorttest:
    description: Run short tests from build workspace, for re-use by diferent architectures
    parameters:
      result_subdir:
        type: string
    steps:
      - attach_workspace:
          at: /home/circleci
      - run: mkdir -p /tmp/results/<< parameters.result_subdir >>
      - run:
          name: Run short tests
          no_output_timeout: 30m
          command: |
            set -e
            set -x
            export PATH=$(echo "$PATH" | sed -e 's|:/home/circleci/\.go_workspace/bin||g' | sed -e 's|:/usr/local/go/bin||g')
            export GOPATH="/home/circleci/go"
            export PATH="${PATH}:${GOPATH}/bin"
            export ALGORAND_DEADLOCK=enable
            GOLANG_VERSION=$(./scripts/get_golang_version.sh)
            eval "$(~/gimme "${GOLANG_VERSION}")"
            scripts/configure_dev.sh
            scripts/buildtools/install_buildtools.sh -o "gotest.tools/gotestsum"
            PACKAGES="$(go list ./... | grep -v /go-algorand/test/ | circleci tests split --split-by=timings --timings-type=classname)"
            export PACKAGE_NAMES=$(echo $PACKAGES | tr -d '\n')
            echo "Testing the following packages:"
            echo $PACKAGE_NAMES
            gotestsum --format pkgname --junitfile /tmp/results/<< parameters.result_subdir >>/results.xml --jsonfile /tmp/results/<< parameters.result_subdir >>/testresults.json -- --tags "sqlite_unlock_notify sqlite_omit_load_extension" -short -race -timeout 1h -coverprofile=coverage.txt -covermode=atomic -p 1 $PACKAGE_NAMES
      - store_artifacts:
          path: /tmp/results
          destination: test-results
      - store_test_results:
          path: /tmp/results

  generic_integration:
    description: Run integration tests from build workspace, for re-use by diferent architectures
    parameters:
      result_subdir:
        type: string
    steps:
      - attach_workspace:
          at: /home/circleci
      - run: mkdir -p /tmp/results/<< parameters.result_subdir >>
      - run:
          name: Run integration tests
          no_output_timeout: 30m
          command: |
            set -x
            export PATH=$(echo "$PATH" | sed -e 's|:/home/circleci/\.go_workspace/bin||g' | sed -e 's|:/usr/local/go/bin||g')
            export GOPATH="/home/circleci/go"
            export PATH="${PATH}:${GOPATH}/bin"
            export ALGORAND_DEADLOCK=enable
            export BUILD_TYPE=integration
            GOLANG_VERSION=$(./scripts/get_golang_version.sh)
            eval "$(~/gimme "${GOLANG_VERSION}")"
            scripts/configure_dev.sh
            scripts/buildtools/install_buildtools.sh -o "gotest.tools/gotestsum"
            export ALGOTEST=1
            export SHORTTEST=-short
            export TEST_RESULTS=/tmp/results/<< parameters.result_subdir >>
            test/scripts/run_integration_tests.sh
      - store_artifacts:
          path: /tmp/results
          destination: test-results
      - store_test_results:
          path: /tmp/results

jobs:
  codegen_verification:
    machine:
      image: ubuntu-2004:202104-01
    resource_class: xlarge
    steps:
      - checkout
      - prepare_go
      - run: |
          export PATH=$(echo "$PATH" | sed -e 's|:/home/circleci/\.go_workspace/bin||g' | sed -e 's|:/usr/local/go/bin||g')
          export GOPATH="/home/circleci/go"
          scripts/travis/codegen_verification.sh

  amd64_build:
    machine:
      image: ubuntu-2004:202104-01
    resource_class: xlarge
    steps:
      - checkout
      - prepare_go
      - generic_build

  amd64_test:
    machine:
      image: ubuntu-2004:202104-01
    resource_class: xlarge
    parallelism: 8
    steps:
      - prepare_go
      - generic_shorttest:
          result_subdir: amd64-short

  amd64_integration:
    machine:
      image: ubuntu-2004:202104-01
    resource_class: xlarge
    parallelism: 8
    environment:
      TEST_RESULTS: /tmp/results/integration
    steps:
      - prepare_go
      - generic_integration:
          result_subdir: amd64-integration

  arm64_build:
    machine:
      image: ubuntu-2004:202101-01
    resource_class: arm.large
    steps:
      - checkout
      - prepare_go
      - generic_build

  arm64_test:
    machine:
      image: ubuntu-2004:202101-01
    resource_class: arm.large
    parallelism: 8
    steps:
      - checkout
      - prepare_go
      - generic_shorttest:
          result_subdir: arm64-short

  arm64_integration:
    machine:
      image: ubuntu-2004:202101-01
    resource_class: arm.large
    parallelism: 8
    steps:
      - checkout
      - prepare_go
      - generic_integration:
          result_subdir: arm64-integration

  mac_amd64_build:
    macos:
      xcode: 11.0.0
    steps:
      - run: git -C /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core fetch --unshallow
      - checkout
      - prepare_go
      - generic_build

  mac_amd64_test:
    macos:
      xcode: 11.0.0
    parallelism: 8
    steps:
      - run: git -C /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core fetch --unshallow
      - prepare_go
      - generic_shorttest:
          result_subdir: mac-amd64-short

  mac_amd64_integration:
    macos:
      xcode: 11.0.0
    parallelism: 8
    environment:
      TEST_RESULTS: /tmp/results/integration
    steps:
      - run: git -C /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core fetch --unshallow
      - prepare_go
      - generic_integration:
          result_subdir: mac-amd64-integration

  windows_x64_build:
    executor:
      name: win/default
      size: large
    steps:
      - checkout
      - prepare_go
      - run:
          no_output_timeout: 30m
          command: |
            export PATH=$(echo "$PATH" | sed -e 's|:/home/circleci/\.go_workspace/bin||g' | sed -e 's|:/usr/local/go/bin||g')
            export GOPATH="/home/circleci/go"
            export ALGORAND_DEADLOCK=enable
            scripts/travis/build_test.sh
          shell: bash.exe
