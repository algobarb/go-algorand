version: 2.1

orbs:
  win: circleci/windows@2.3.0
  go: circleci/go@1.7.0

workflows:
  version: 2
  build_pr:
    jobs:
      - codegen_verification
      - amd64_build
      - amd64_test:
          requires:
            - amd64_build
      - amd64_integration:
          requires:
            - amd64_build
      #- arm64_build
      #- arm64_integration
      #- mac_amd64_build
      #- windows_x64_build

commands:
  prepare_go:
    description: "Clean out existing Go so we can use our preferred version"
    steps:
      - run: |
          sudo rm -rf /home/circleci/.go_workspace /usr/local/go
          sudo rm -rf /home/circleci/.go_workspace/bin /usr/local/go/bin

jobs:
  codegen_verification:
    machine:
      image: ubuntu-2004:202104-01
    resource_class: xlarge
    steps:
      - checkout
      - prepare_go
      - run: |
          export PATH=$(echo "$PATH" | sed -e 's|:/home/circleci/\.go_workspace/bin||g' | sed -e 's|:/usr/local/go/bin||g')
          export GOPATH="/home/circleci/go"
          scripts/travis/codegen_verification.sh

  amd64_build:
    machine:
      image: ubuntu-2004:202104-01
    resource_class: xlarge
    steps:
      - checkout
      - prepare_go
      - restore_cache:
          keys:
            - 'go-mod-1-14-7-v1-{{ arch }}-{{ checksum "go.mod" }}-{{ checksum "go.sum" }}'
      - run:
          name: scripts/travis/build.sh --make_debug
          command: |
            export PATH=$(echo "$PATH" | sed -e 's|:/home/circleci/\.go_workspace/bin||g' | sed -e 's|:/usr/local/go/bin||g')
            export GOPATH="/home/circleci/go"
            export ALGORAND_DEADLOCK=enable
            scripts/travis/build.sh --make_debug
      - save_cache:
          key: 'go-mod-1-14-7-v1-{{ arch }}-{{ checksum "go.mod" }}-{{ checksum "go.sum" }}'
          paths:
            - /home/circleci/go/pkg/mod
      - persist_to_workspace:
          root: /home/circleci
          paths:
            - project
            - go
            - gimme
            - .gimme

  amd64_test:
    machine:
      image: ubuntu-2004:202104-01
    resource_class: xlarge
    parallelism: 5
    environment:
      TEST_RESULTS: /tmp/results/shorttest
    steps:
      - prepare_go
      - attach_workspace:
          at: /home/circleci
      - run: mkdir -p $TEST_RESULTS
      - run:
          name: Run short tests
          command: |
            set -e
            export PATH=$(echo "$PATH" | sed -e 's|:/home/circleci/\.go_workspace/bin||g' | sed -e 's|:/usr/local/go/bin||g')
            export GOPATH="/home/circleci/go"
            export PATH="${PATH}:${GOPATH}/bin"
            export ALGORAND_DEADLOCK=enable
            GOLANG_VERSION=$(./scripts/get_golang_version.sh)
            eval "$(~/gimme "${GOLANG_VERSION}")"
            scripts/buildtools/install_buildtools.sh -o "gotest.tools/gotestsum"
            PACKAGES="$(go list ./... | grep -v /go-algorand/test/ | circleci tests split --split-by=timings --timings-type=classname)"
            export PACKAGE_NAMES=$(echo $PACKAGES | tr -d '\n')
            echo "Testing the following packages:"
            echo $PACKAGE_NAMES
            gotestsum --format pkgname --junitfile $TEST_RESULTS/results.xml --jsonfile $TEST_RESULTS/testresults.json -- --tags "sqlite_unlock_notify sqlite_omit_load_extension" -short -race -timeout 1h -coverprofile=coverage.txt -covermode=atomic -p 1 $PACKAGE_NAMES
      - store_artifacts:
          path: /tmp/results
          destination: raw-test-output
      - store_test_results:
          path: /tmp/results
      
  amd64_integration:
    machine:
      image: ubuntu-2004:202104-01
    resource_class: xlarge
    steps:
      - prepare_go
      - attach_workspace:
          at: /home/circleci
      - run:
          name: Run integration tests
          command: |
            export PATH=$(echo "$PATH" | sed -e 's|:/home/circleci/\.go_workspace/bin||g' | sed -e 's|:/usr/local/go/bin||g')
            export GOPATH="/home/circleci/go"
            export PATH="${PATH}:${GOPATH}/bin"
            export ALGORAND_DEADLOCK=enable
            export BUILD_TYPE=integration
            GOLANG_VERSION=$(./scripts/get_golang_version.sh)
            eval "$(~/gimme "${GOLANG_VERSION}")"
            ./test/scripts/run_integration_tests.sh

  arm64_build:
    machine:
      image: ubuntu-2004:202101-01
    resource_class: arm.medium
    steps:
      - checkout
      - prepare_go
      - run:
          no_output_timeout: 30m
          command: |
            export PATH=$(echo "$PATH" | sed -e 's|:/home/circleci/\.go_workspace/bin||g' | sed -e 's|:/usr/local/go/bin||g')
            export GOPATH="/home/circleci/go"
            scripts/travis/build_test.sh

  arm64_integration:
    machine:
      image: ubuntu-2004:202101-01
    resource_class: arm.medium
    steps:
      - checkout
      - prepare_go
      - run:
          no_output_timeout: 30m
          command: |
            export PATH=$(echo "$PATH" | sed -e 's|:/home/circleci/\.go_workspace/bin||g' | sed -e 's|:/usr/local/go/bin||g')
            export GOPATH="/home/circleci/go"
            scripts/travis/integration_test.sh

  mac_amd64_build:
    macos:
      xcode: 11.0.0
    steps:
      - checkout
      - prepare_go
      - run:
          no_output_timeout: 30m
          command: |
            export PATH=$(echo "$PATH" | sed -e 's|:/home/circleci/\.go_workspace/bin||g' | sed -e 's|:/usr/local/go/bin||g')
            export GOPATH="/home/circleci/go"
            scripts/travis/build_test.sh

  mac_amd64_integration:
    macos:
      xcode: 11.0.0
    steps:
      - checkout
      - prepare_go
      - run:
          no_output_timeout: 30m
          command: |
            export PATH=$(echo "$PATH" | sed -e 's|:/home/circleci/\.go_workspace/bin||g' | sed -e 's|:/usr/local/go/bin||g')
            export GOPATH="/home/circleci/go"
            scripts/travis/integration_test.sh

  windows_x64_build:
    executor:
      name: win/default
      size: medium
    steps:
      - checkout
      - prepare_go
      - run:
          no_output_timeout: 30m
          command: |
            export PATH=$(echo "$PATH" | sed -e 's|:/home/circleci/\.go_workspace/bin||g' | sed -e 's|:/usr/local/go/bin||g')
            export GOPATH="/home/circleci/go"
            scripts/travis/build_test.sh
          shell: bash.exe
